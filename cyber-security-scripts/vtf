#!/bin/bash

# Ensure a file path is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <file-path>"
    exit 1
fi

# Perform the VirusTotal scan
scan_result=$(vtcli scan file "$1")
 
# Extract the hash from the scan result
hash=$(echo "$scan_result" | awk '{print $2}')
 
# Initialize status variable and queue status flag
status=""
qu="False"

# Function to perform analysis and check status
perform_analysis() {
    analysis_result=$(vtcli an "$hash")
    # Extract status using grep
    status=$(echo "$analysis_result" | grep -oP 'status: "\K[^"]+')
}

# Perform initial analysis
echo "Performing initial analysis on extracted hash..."
perform_analysis

# Check status and wait until it is "completed"
while [ "$status" != "completed" ]; do
    if [ "$qu" = "False" ]; then
        echo "Analysis is queued; waiting for completion..."
        qu="True"  # Set qu to True after displaying the message once
    fi
    sleep 2
    perform_analysis
done


echo "analysis result:"
vtcli an "$hash" 


echo ""
echo "Deep analysis:"
hash2=$(md5sum "$1" | awk '{print $1}')
vtcli file "$hash2" -s



# Function to perform analysis and output only if there's meaningful content
check_info() {
    local title="$1"
    local command="$2"

    # Run the command and capture the output
    local output=$(eval "$command" | grep -v '^\s*$')  # grep to remove empty lines

    # Only print the title and output if there is any non-empty output
    if [ -n "$output" ]; then
        echo ""
        echo "$title"
        echo "$output"
    fi
}
 
# Behavior analysis
check_info "Behavior analysis:" "vtcli file behaviours \"$hash2\" -s"

# Relationship analysis
check_info "Relationship analysis:" "vtcli file relationships \"$hash2\" -s"

# Bundled files analysis
check_info "Bundled files analysis:" "vtcli file bundled_files \"$hash2\" -s"

echo "Script completed."