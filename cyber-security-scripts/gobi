#!/bin/bash

current_directory="$PWD"

if [ "$#" -eq 0 ] || [ "$1" == "-h" ]; then
  echo "Usage: $0 <target_url> <wordlist>"
  echo "  target_url: The URL you want to run gobuster on."
  echo "  wordlist: The wordlist file you want to use with gobuster."
  exit 1
fi

echo "This script will run gobuster on the given URL and download content for each folder"

process_results() {
  echo "Starting to process results..."
  trap '' SIGINT

  while read -r line; do
    if [[ $line == *"Status: 200"* ]] || [[ $line == *"Status: 301"* ]]; then    
      folder_name=$(echo $line | awk '{print $1}' | tr -d '\r\n' | sed 's/\x1B\[[0-9;]*[JKmsu]//g')
      folder_name=$(echo $folder_name | sed 's/[^a-zA-Z0-9._/-]//g')
      echo "Processing folder: $folder_name"
      full_url="${target_url}${folder_name}"
      echo "Starting wget on $full_url..."
      wget -r --cut-dirs=2 "$full_url"
      echo "Finished wget on $full_url."
    fi
  done < $resultfile
  
  echo "Done processing all lines from gobuster."
}

target_url=$1
domain=$(echo $1 | sed 's,^https\?://,,;s,www\.,,;s,/.*,,;')
ip=$(getent hosts $domain | awk '{ print $1 }')

dics=$2
sanitized_url=${target_url//http:\/\//}
sanitized_url=${sanitized_url////_}
sanitized_url=${sanitized_url//:/_}

resultfile="$current_directory/gobuster_result_$ip.txt"

# trap 'echo ""; echo "Gobuster interrupted. Do you want to start the download for the discovered directories? (y/n)"; read response; if [[ "$response" == "y" ]]; then process_results; fi; exit 0' SIGINT

echo ""
echo ""
echo "Starting gobuster on $domain (IP: $ip) with wordlist $dics..."

gobuster dir -u $target_url -w $2 -t 70 | tee -a $resultfile

echo "Gobuster is done. Do you want to start the download for the discovered directories? (y/n)"
read response
if [[ "$response" != "y" ]]; then
  echo "Exiting without downloading."
  exit 0
fi
 
process_results
