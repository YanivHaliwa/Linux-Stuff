#!/bin/bash

export DISPLAY=:0
export XAUTHORITY=$HOME/.Xauthority
export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
export PULSE_SERVER=/run/user/1000/pulse/native

# Set the threshold for low battery level
THRESHOLD=25
CHARGED=100

# Path to the flag file
FLAG_FILE="$HOME/.cache/full_charge_notified"
LOCK_FILE="/tmp/battery_check.lock"

# Create a lock file to prevent overlapping executions
exec 200>$LOCK_FILE
flock -n 200 || exit 1

# Get the current battery level
BATTERY_LEVEL=$(acpi -b | grep -P -o '[0-9]+(?=%)')

# Get the charging status
CHARGING_STATUS=$(acpi -b | grep -o 'Charging\|Discharging')

if [ "$BATTERY_LEVEL" -le "$THRESHOLD" ] && [ "$CHARGING_STATUS" == "Discharging" ]; then
    rm -f "$FLAG_FILE"
    /bin/mpg123 $HOME/tools/charge_now.mp3
    /bin/notify-send "Low Battery" "Your battery is at $BATTERY_LEVEL%. Please plug in your charger." --icon=dialog-warning  
fi

if [ "$BATTERY_LEVEL" -eq "$CHARGED" ] && [ ! -f "$FLAG_FILE" ]; then
    /bin/mpg123 $HOME/tools/battery_full.mp3  ## CHANGE TO ANY AUDIO YOU WANT
    /bin/notify-send "Battery Full" "Battery is fully charged. You can unplug the charger." --icon=dialog-warning
    touch "$FLAG_FILE"
elif [ "$BATTERY_LEVEL" -ne "$CHARGED" ]; then
    # Remove the flag file if the battery is not full
    rm -f "$FLAG_FILE"
fi

# Release the lock
flock -u 200
