#!/usr/bin/env python3

import os
import sys

def get_files_list(directory, recursive=False):
    files_list = []
    excluded_dirs = {'.git', '.trash' , '__pycache__'}
    
    if recursive:
        # Use os.walk to traverse all directories and subdirectories
        for root, dirs, files in os.walk(directory):
            # Modify dirs in-place to exclude .git and .trash
            dirs[:] = [d for d in dirs if d not in excluded_dirs]
            for file_name in files:
                files_list.append(os.path.join(root, file_name))
    else:
        # Only list files in the specified directory
        for file_name in os.listdir(directory):
            if os.path.isfile(os.path.join(directory, file_name)):
                files_list.append(os.path.join(directory, file_name))
    
    return files_list

# Check if the directory argument is provided
if len(sys.argv) < 2:
    print("Usage: python script.py <directory> [-r]")
    sys.exit(1)

# Get the directory path from the command-line argument
directory_path = sys.argv[1]

# Check if the -r flag is provided
recursive = '-r' in sys.argv

# Check if the provided path is a valid directory
if not os.path.isdir(directory_path):
    print("Invalid directory path.")
    sys.exit(1)

# Get the list of files in the directory (recursive if -r flag is used)
files = get_files_list(directory_path, recursive)

# Save the list to a file
output_file = 'file_list.txt'
with open(output_file, 'w') as file:
    file.write('\n'.join(files))

print(f"File list saved to {output_file}.")
