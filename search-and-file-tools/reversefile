#!/usr/bin/python3
import argparse
import os
import logging

def setup_logging():
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def reverse_hebrew_text(file_path):
    if not file_path.endswith('.txt'):
        logging.error("The file must have a .txt extension.")
        return
    
    if not os.path.isfile(file_path):
        logging.error(f"The file {file_path} does not exist.")
        return
    
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
        
        reversed_lines = [line[::-1] for line in lines]
        
        output_file_path = file_path.replace('.txt', '_reversed.txt')
        with open(output_file_path, 'w', encoding='utf-8') as file:
            file.writelines(reversed_lines)
        
        logging.info(f'Reversed text saved to {output_file_path}')
    except Exception as e:
        logging.error(f"An error occurred: {e}")

if __name__ == "__main__":
    setup_logging()
    parser = argparse.ArgumentParser(description="Reverse Hebrew text in a file.")
    parser.add_argument('file_path', type=str, help="The path to the file to be processed.")
    
    args = parser.parse_args()
    reverse_hebrew_text(args.file_path)
