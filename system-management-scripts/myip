#!/bin/bash

# Function to validate IPv4 address
validate_ip() {
  if echo "$1" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
    echo "valid"
  else
    echo "invalid"
  fi
}

# Function to try different services to get the public IP
get_public_ip() {
  # List of services to try
  services=(
    "https://icanhazip.com"
    "https://ipinfo.io/ip"
    "https://ifconfig.me"
  )

  for service in "${services[@]}"; do
    ip=$(curl -s "$service")
    if [ "$(validate_ip "$ip")" = "valid" ]; then
      echo "$ip"
      return
    fi
  done

  echo "Could not determine public IP"
}

# Get all the interfaces that are up and are point-to-point (common for VPNs)
vpn_interfaces=$(ip a | awk '/POINTOPOINT/ && /UP/ && /LOWER_UP/ {print $2}' | sed 's/://')

# Initialize an empty string to hold the IPs
vpn_ips=""

# Loop through each interface and get its IP
for interface in $vpn_interfaces; do
  ip=$(ip a s $interface 2>/dev/null | grep -o -P '(?<=inet )[0-9]{1,3}(\.[0-9]{1,3}){3}')
  vpn_ips="${vpn_ips}${interface} = ${ip}  "
done

w=$(ip a s wlan0 2>/dev/null | grep -o -P '(?<=inet )[0-9]{1,3}(\.[0-9]{1,3}){3}')

# Get the public IP using the function
public_ip=$(get_public_ip)

# Print the final output
printf "${vpn_ips}wlan0 = ${w}     \n"
printf "PUBLIC = ${public_ip} \n"

